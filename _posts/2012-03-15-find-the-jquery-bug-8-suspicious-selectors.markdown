---
layout: post
title: 'Find the jQuery Bug #8: Suspicious Selectors'
date: '2012-03-15 05:01:00'
---

<h3>
Introduction</h3>

In this open-ended series I'll be showcasing a snippet of buggy jQuery code that you might encounter, explain what the problem is, and then identify how you can easily resolve the issue.

<blockquote>
You can view other posts in this series...
<ul>
<li><a href="http://www.elijahmanor.com/2011/08/find-jquery-bug-1-chicken-or-egg.html">Find the jQuery Bug #1: Chicken or the Egg</a></li>
<li><a href="http://www.elijahmanor.com/2012/01/find-jquery-bug-2-point-of-no-return.html">Find the jQuery Bug #2: Point of No Return</a></li>
<li><a href="http://www.elijahmanor.com/2012/01/find-jquery-bug-3-give-me-truth.html">Find the jQuery Bug #3: Give Me Truth</a></li>
<li><a href="http://www.elijahmanor.com/2012/02/find-jquery-bug-4-animations-gone-wild.html">Find the jQuery Bug #4: Animations Gone Wild</a></li>
<li><a href="http://www.elijahmanor.com/2012/03/find-jquery-bug-5-defective-data.html">Find the jQuery Bug #5: Defective Data</a></li>
<li><a href="http://www.elijahmanor.com/2012/03/find-jquery-bug-6-traversing-trouble.html">Find the jQuery Bug #6: Traversing Trouble</a></li>
<li><a href="http://www.elijahmanor.com/2012/03/find-jquery-bug-7-using-method-as-event.html">Find the jQuery Bug #7: Using a Method as an Event Handler</a></li>
</ul>
</blockquote>

<h3>
The Desired Feature</h3>

The following is a snippet of HTML markup that was generated by Oracle's JSF (<a href="http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html">JavaServer Faces</a>). We want to select the first name field and add a class that will change it's border style.

<script src="https://gist.github.com/1964298.js?file=_snippet.html"></script>
<h3>
The Buggy Code</h3>

The following code snippets is our first attempt at solving the problem, but there is a subtle error. Do you see it?

<script src="https://gist.github.com/1964298.js?file=fiddle.js"></script>
You can <a href="http://jsfiddle.net/WU5Tz/">view, run, and edit</a> the above code sample from JSBin.

<iframe allowfullscreen="allowfullscreen" frameborder="0" src="http://jsfiddle.net/WU5Tz/embedded/result,js,html/presentation/" style="height: 150px; width: 100%;"></iframe>

The result that we expected was to see the first name textbox with a red border, but as you can see above it was not successful.

<h3>
The Underlying Problem</h3>

At the root of the problem is that JSF inserts a <code>:</code> delimiter inside of the <code>id</code> attribute. jQuery abides by the <a href="http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier">W3C CSS Specification Rules</a> when it comes to valid characters in a selector. 

<blockquote>
If your ID, name, or class contains one of the following meta-characters then you have a problem... <code>!"#$%&'()*+,./:;<=>?@[\]^`{|}~</code></blockquote>

Here are some examples of invalid selectors in jQuery because they contain invalid characters:

<script src="https://gist.github.com/1964298.js?file=_snippet.js"></script>
<h3>
A Solution</h3>

jQuery provides a solution of escaping invalid characters inside a selector. You can proceed each character with two backslashes <code>\\</code> and then the selector should start working as you expect.

<blockquote>
If you wish to use any of the meta-characters ( such as <code>!"#$%&'()*+,./:;<=>?@[\]^`{|}~</code> ) as a literal part of a name, you must escape the character with two backslashes: <code>\\</code>. For example, if you have an element with id="foo.bar", you can use the selector <code>$("#foo\\.bar")</code>.

-- <a href="http://api.jquery.com/category/selectors/">http://api.jquery.com/category/selectors/</a></blockquote>

In order to fix our example we just need to escape the <code>:</code> character with <code>\\</code> like the following code example demonstrates.

<script src="https://gist.github.com/1964301.js?file=fiddle.js"></script>
You can <a href="http://jsfiddle.net/qTk6P/">view, run, and edit</a> the above code sample from JSBin.

If you test out the code again below you'll notice that once you've filled in the textbox and click enter then the behavior will continue as we expected.

<iframe allowfullscreen="allowfullscreen" frameborder="0" src="http://jsfiddle.net/qTk6P/embedded/result,js,html/presentation/" style="height: 150px; width: 100%;"></iframe>

The following examples are the corrected versions of the previous snippets shown in the previous section:

<script src="https://gist.github.com/1964301.js?file=_snippet.js"></script>
<h3>
An Alternate Solution</h3>

An alternate way to look at this problem is to create a method that will automatically escape the id, name, or class name before using it as a selector.

<script src="https://gist.github.com/1964301.js?file=escapeSelector.js"></script>
The previous code snippet extends the String prototype and uses a regular expression to find all invalid meta-characters and escapes them with <code>\\</code>.

<h3>
Conclusion</h3>

The key concept to remember here is that there is a set of characters that are invalid and need to be escaped before using them in a jQuery selector.

Until next time...