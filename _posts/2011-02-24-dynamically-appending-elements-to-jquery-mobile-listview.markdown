---
layout: post
title: Dynamically Appending Elements to jQuery Mobile ListView
date: '2011-02-24 13:31:00'
---

I've been developing with <a href="http://jquerymobile.com/">jQuery Mobile</a> the past several weeks and the application I'm working on has a listing page where I am retrieving the results via <a href="http://api.jquery.com/jQuery.ajax/">$.ajax</a> and then dynamically appending the results to the current page. I started out with a page very much like the following...<br><pre><div data-role="page" id="hackerNews"><br><br>  <div data-role="header" data-backbtn="false"><br>    <a id="btnRefresh" href="#" data-icon="refresh">Refresh</a><br>    <h1>Hacker News  <br>      <span id="itemCount" class="count ui-btn-up-c ui-btn-corner-all">0</span><br>    </h1><br>  </div><br><br><br>  <div id="content" data-role="content"><br>    <ol class="newsList" data-role="listview"></ol><br>  </div><br><br></div><br><br><script id="newsItem" type="text/x-jquery-tmpl"><br>  <li data-messageId="${id}" class="newsItem"><br>    <h3><a href="${url}">${title}</a></h3><br>    <p class="subItem"><strong>${postedAgo} by ${postedBy} </strong></p><br>    <div class="ui-li-aside"><br>      <p><strong>${points} points</strong></p><br>      <p>${commentCount} comments</p><br>    </div><br>  </li><br></script><br></pre>...but when I tried to dynamically render the ListView into the content area the browser ended up rendering something like the screenshot below on the left, where I had expected it to render something like the screenshot on the right.<br><br><div><a href="http://3.bp.blogspot.com/-RHj_nKyFrig/TWXr_CDrUSI/AAAAAAAAJYU/msXs2C3RbwA/s1600/photo+%25288%2529.PNG" imageanchor="1"><img border="0" height="400" src="http://3.bp.blogspot.com/-RHj_nKyFrig/TWXr_CDrUSI/AAAAAAAAJYU/msXs2C3RbwA/s400/photo+%25288%2529.PNG" width="265"></a><a href="http://2.bp.blogspot.com/-vQ_IfidM2H0/TWXr68ECTEI/AAAAAAAAJYQ/FTvzwS2uvXE/s1600/photo+%25287%2529.PNG" imageanchor="1"><img border="0" height="400" src="http://2.bp.blogspot.com/-vQ_IfidM2H0/TWXr68ECTEI/AAAAAAAAJYQ/FTvzwS2uvXE/s400/photo+%25287%2529.PNG" width="266"></a></div><div></div>In the following example, I will pull the most recent items from <a href="http://news.ycombinator.com/">Hacker News</a> and display them inside of a jQuery Mobile ListView.<br><br>After some digging and researching, it turns out the difference between the left screenshot and the right is just one line of code. All you have to do is to call the $.listview() widget off of your list jQuery object... so, something like <code>$( "#myUnorderedList" ).listview();</code>.<br><br>Make sure to notice line #61, which is the main difference between the screenshot above!<br><pre>var hackerNews = (function( $, undefined ) {<br>  var pub = {};<br><br>  pub.init = function() {<br>    //Refresh news when btnRefresh is clicked<br>    $( "#btnRefresh" ).live( "click", <br>      function() {<br>        pub.getAndDisplayNews();<br>      });<br><br>    //When news updated, display items in list<br>    amplify.subscribe( "news.updated", <br>      function( news ) {<br>        displayNews( news );<br>      });<br><br>    //When news updated, then set item count<br>    amplify.subscribe( "news.updated", <br>      function( news ) {<br>        $("#itemCount").text( news.items.length );<br>      });    <br>  };<br><br>  pub.getAndDisplayNews = function() {<br>    //Starting loading animation<br>    $.mobile.pageLoading();    <br><br>    //Get news and add success callback using then<br>    getNews().then( function() {<br>      //Stop loading animation on success<br>      $.mobile.pageLoading( true );    <br>    });    <br>  };<br><br>  function getNews() {<br>    //Get news via ajax and return jqXhr<br>    return $.ajax({<br>      url: "http://api.ihackernews.com/" + <br>         "page?format=jsonp",<br>      dataType: "jsonp"<br>    }).then( function( data, textStatus, jqXHR ) {<br>      //Publish that news has been updated & allow<br>      //the 2 subscribers to update the UI content<br>      amplify.publish( "news.updated", data );<br>    });<br>  }<br><br>  function displayNews( news ) {<br>    var newsList = $( "#hackerNews" )<br>      .find( ".newsList" );<br><br>    //Empty current list<br>    newsList.empty();<br><br>    //Use template to create items & add to list<br>    $( "#newsItem" ).tmpl( news.items )<br>      .appendTo( newsList );<br><br>    //Call listview jQuery UI Widget after adding <br>    //items to the list for correct rendering<br>    newsList.listview( "refresh" );    <br>  }<br><br>  return pub;<br>}( jQuery ));<br><br>hackerNews.init();<br>hackerNews.getAndDisplayNews();<br></pre>I am utilizing some of the new jQuery 1.5 <a href="http://api.jquery.com/category/deferred-object/">Deferred</a> syntax and also the publish/subscribe methods from the <a href="http://amplifyjs.com/">Amplify Library</a> released by <a href="http://appendto.com/">appendTo</a> recently. I'm also using the Revealing Module Pattern to protect the global scope.<br><br><br><br><a href="http://jsfiddle.net/elijahmanor/5xwE8/show" target="_blank">View Demo</a> <a href="http://jsfiddle.net/elijahmanor/5xwE8/" target="_blank">Edit Demo</a><br><br>