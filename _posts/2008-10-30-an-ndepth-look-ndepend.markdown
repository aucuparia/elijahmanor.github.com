---
layout: post
title: An NDepth Look @ NDepend
date: '2008-10-30 15:15:00'
---

<span>Synpopsis</span> <br><br>I've been wanting to review <a href="http://www.ndepend.com/Default.aspx">NDepend </a>for quite some time, but I figured it was bad form to run it against my production code from work.<br><br>So, instead of running the tool against my work code, I thought I'd use the <a href="http://webdevdotnet.blogspot.com/2008/10/nashville-net-users-group-presentation.html">PetShop ASP.NET MVC project </a>that I created for the .NET User's Group.<br><br><a href="http://www.ndepend.com/Default.aspx">NDepend </a>provides many ways to visualize the architecture of any particular project.  To create the following pictures and diagrams all I did was point NDepend to my Visual Studio solution file.<br><br><span>Dependency Graph</span><br><br>A useful way to get an understanding of how your application architecture is to generate a Dependency Graph based off your code. The following graph shows show the PetShop pieces relate to one another.<br><br><div><a href="http://2.bp.blogspot.com/_L6DiZQsfJzs/SQloWH168JI/AAAAAAAAGF0/UzL5o46rWxY/s1600-h/DependencyGraphSnapshot.png" imageanchor="1"><img border="0" src="http://2.bp.blogspot.com/_L6DiZQsfJzs/SQloWH168JI/AAAAAAAAGF0/FozgGnwuEnM/s400-R/DependencyGraphSnapshot.png"></a> </div><br><span>Dependency Matrix</span><br><br><div>For those of you who are graphically challenged, there is a Dependency Matrix that does a nice job of showing how many dependencies there are between 2 particular areas of your design.</div><br><div> <a href="http://3.bp.blogspot.com/_L6DiZQsfJzs/SQloa45wFwI/AAAAAAAAGF8/sn0FIwI893s/s1600-h/DependencyMatrixSnapshot.png" imageanchor="1"><img border="0" src="http://3.bp.blogspot.com/_L6DiZQsfJzs/SQloa45wFwI/AAAAAAAAGF8/TyoqOJ8MvoA/s400-R/DependencyMatrixSnapshot.png"></a> </div><br><span>Code Metrics</span><br><br><div>The next diagram has always impressed me. Even if you didn't know what it meant... it is pretty impressive to just look at :) The following diagram is actually showing the <a href="http://www.ndepend.com/Features.aspx#Metrics">Code Metrics</a> for your project. The following image represents the number of lines of code (LOC) in your project.  </div><br><div><a href="http://2.bp.blogspot.com/_L6DiZQsfJzs/SQlok6J3XnI/AAAAAAAAGGE/dbrS6RNZE4A/s1600-h/MetricTreemapSnapshot.png" imageanchor="1"><img border="0" src="http://2.bp.blogspot.com/_L6DiZQsfJzs/SQlok6J3XnI/AAAAAAAAGGE/QMy08n2mRHc/s400-R/MetricTreemapSnapshot.png"></a></div><br><span>CQL Queries</span><br><br>In addition to all these cool graphs, matrices, and images, there are some hard core queries that you can perform against your assemblies. <a href="http://www.ndepend.com/Default.aspx">NDepend </a>has something called <a href="http://www.ndepend.com/Features.aspx#CQL">Code Query Language (CQL)</a> that allows you to write custom queries to identify numerous statistics such as:<br><ul><li>Which public methods have more than 30 lines of code?</li><li>Which classes implement System.IDisposable?</li><li>Which methods have been refactored recently and is not thoroughly covered by tests?</li><li>etc...<br></li></ul><br><div><a href="http://1.bp.blogspot.com/_L6DiZQsfJzs/SQlrdo9v4NI/AAAAAAAAGGM/m49b5dmQNrA/s1600-h/Queries.png" imageanchor="1"><img border="0" src="http://1.bp.blogspot.com/_L6DiZQsfJzs/SQlrdo9v4NI/AAAAAAAAGGM/-VTrylbIWlY/s400-R/Queries.png"></a> </div><br><div>The following is an example of what a CQL query looks like. This query identifies the methods that are too big in your assembly. <a href="http://www.ndepend.com/Default.aspx">NDepend </a>comes with a library of already created queries, such as this one, but you are able to add to or customize these quieres as well. </div><br><div><a href="http://4.bp.blogspot.com/_L6DiZQsfJzs/SQlri74dSBI/AAAAAAAAGGU/ABJi9JAwMQY/s1600-h/Query.png" imageanchor="1"><img border="0" src="http://4.bp.blogspot.com/_L6DiZQsfJzs/SQlri74dSBI/AAAAAAAAGGU/xUhWPBBgf4g/s400-R/Query.png"></a></div><br><span>Conclusion </span><br><br>There is so many more features that I haven't covered that NDepend provides, but I wanted to highlight some of the features that I thought are very useful and could help you in your current projects.<br><br>I think this tools adds some great functionality that dovetails nicely with the features of from the various Visual Studio suites.<br><br>Don't just take my word for it, I encourage you to download a <a href="http://www.ndepend.com/NDependDownload.aspx">trial version</a> of NDepend and check it out for yourself.<br><br>Then if you like it, make a list of the features that are useful for your project, show it to your boss, and see if your work will <a href="http://www.ndepend.com/Purchase.aspx">pay for it</a> :)<br>