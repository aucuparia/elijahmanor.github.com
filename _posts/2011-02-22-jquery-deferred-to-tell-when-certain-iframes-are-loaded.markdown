---
layout: post
title: jQuery.Deferred to Tell When Certain iframes Are Loaded
date: '2011-02-22 13:35:00'
---

Since jQuery 1.5 came out I've been intrigued about the new <a href="http://api.jquery.com/category/deferred-object/"><code>jQuery.Deferred</code></a> feature, but hadn't used it until now. You might think that Deferreds are isolated to only <code>jQuery.ajax</code> requests, but they are much more flexible than that. <code>jQuery.ajax</code> utilize defferds, but you can also use them to define your own set of promises.<br><blockquote><a href="http://twitter.com/erichynds">Eric Hynds</a> wrote an awesome blog post entitled <a href="http://www.erichynds.com/jquery/using-deferreds-in-jquery/">Using Deferreds in jQuery 1.5</a> describing the inns and outs of jQuery Deferreds in much more detail, but I thought I'd share a use case that I found helpful in a recent project.</blockquote>I'm working on a project where there are multiple hidden iframes loaded on the page (don't ask why LOL) and I needed a way to tell if they were all loaded. Almost immediately I thought about using the new Deferred feature!<br><br><pre>(function($) {<br><br>function iFrameLoaded( id, src ) {<br>   var deferred = $.Deferred(),<br>      iframe = $( "" ).attr({<br>         "id": id,<br>         "src": src<br>      });<br><br>   iframe.load( deferred.resolve );<br>   iframe.appendTo( "body" );<br><br>   deferred.done(function() {<br>      console.log( "iframe loaded: " + id );<br>   });<br><br>   return deferred.promise();<br>}<br><br>$.when(<br>   iFrameLoaded("jQuery", "http://jquery.com"),<br>   iFrameLoaded("appendTo", "http://appendto.com"))<br>.then( function() {<br>   console.log( "Both iframes loaded" );<br>});<br><br>}(jQuery));<br></pre><br>The above code creates a new <code>jQuery.Deferred</code> object (line 4) and iframe element. Once the iframe is loaded, we tell the deferred object to <code>resolve</code> itself (line 10). At that point we define our own event handler to respond to when the deferred is <code>done</code> (line 13). In this case we just print to the console that "iframe loaded". Then we return the deferred <code>promise</code> (line 17) so that we can use it in the new <code>jQuery.when</code> method.<br><br>Next we call the <code>jQuery.when</code> method (line 20) and pass all the promises we want fulfilled before we proceed. Once all the iframes are loaded, then the <code>then</code> method will execute (line 23) printing out "Both iframes loaded" to the console.<br><br><br><br><a href="http://jsfiddle.net/elijahmanor/qBaf6/show" target="_blank">View Demo</a> <a href="http://jsfiddle.net/elijahmanor/qBaf6/" target="_blank">Edit Demo</a><br><br><blockquote>Note: This same concept can also be applied to a set of images loading and many other applications.</blockquote>