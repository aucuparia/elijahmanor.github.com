---
layout: post
title: Opinionated ASP.NET MVC 2 Template Helpers
date: '2010-05-19 13:35:00'
---

<p>If you have used ASP.NET MVC any, then you are probably aware of the <a href="http://mvccontrib.codeplex.com/" target="_blank">MVC Contrib</a> project hosted on CodePlex. It is a helpful library that provides useful tools that ASP.NET MVC doesn’t give you out of the box. </p>  <h4>Opinionated Input Builders</h4>  <p>One of the pieces that I really like is the <a href="http://www.lostechies.com/blogs/hex/archive/2009/06/09/opinionated-input-builders-for-asp-net-mvc-using-partials-part-i.aspx" target="_blank">Opinionated Input Builders</a> that <a href="http://twitter.com/ehexter" target="_blank">Eric Hexter</a> wrote. The builder allows you to provide one property at a time from your View Model and it will output the label, required indicator, the appropriate input control, and whatever else that it needs to display. </p>  <pre><% using (Html.BeginForm()) { %><br><br>    <%= Html.Input(m => m.FirstName) %><br>    <%= Html.Input(m => m.LastName) %><br>    <%= Html.Input(m => m.Email) %><br><br>    <p class="actions"><br>        <input type="submit" value="Create" /><br>    </p><br><br><% } %></pre> <p> </p> <p><a href="http://elijahmanor.com/webdevdotnet/image.axd?picture=MvcContribPicNik_1.jpg"><img title="MvcContribPicNik" border="0" alt="MvcContribPicNik" src="http://elijahmanor.com/webdevdotnet/image.axd?picture=MvcContribPicNik_thumb_1.jpg" width="628" height="153"></a> </p> <h4>ASP.NET MVC 2 EditorForModel</h4> <p>As it turns out, the ASP.NET MVC team took a similar approach when putting together the Template Helpers in  ASP.NET MVC 2. I ended up switching to the Template Helpers.</p> <pre><% Html.EnableClientValidation(); %><br><% using (Html.BeginForm()) { %><br><br>    <%= Html.EditorForModel() %><br><br>    <p class="actions"><br>        <input type="submit" value="Create" /><br>    </p><br><br><% } %></pre> <p>With some CSS styling, the output of the EditorForModel is close to what the Opinionated Input Builder, but there are some problems as we’ll discuss in the next section.</p> <p><a href="http://elijahmanor.com/webdevdotnet/image.axd?picture=Mvc2ModelPikNic_1.jpg"><img title="Mvc2ModelPikNic" border="0" alt="Mvc2ModelPikNic" src="http://elijahmanor.com/webdevdotnet/image.axd?picture=Mvc2ModelPikNic_thumb_1.jpg" width="628" height="198"></a> </p> <h4>ASP.NET MVC 2 EditorFor</h4> <p>The problem is that I usually don’t want to display or edit my entire model. I often times have things in my View Model that I don’t particularly want to display.  I want to rather manually choose which properties I want to display or edit. </p> <pre><% Html.EnableClientValidation(); %><br><% using (Html.BeginForm()) { %><br><br>    <%= Html.EditorFor(m => m.FirstName) %><br>    <%= Html.EditorFor(m => m.LastName)%><br>    <%-- Purposely Not Show the Email –%><br><br>    <p class="actions"> <br>        <input type="submit" value="Create" /> <br>    </p> <br><br><% } %></pre> <p>Using the above syntax doesn’t quite give the output I was looking for. Only the input controls are rendered (as seen in the following screenshot) instead of providing the scaffolding of label, input, and validation fields like the EditorForModel method provides. </p> <p><a href="http://elijahmanor.com/webdevdotnet/image.axd?picture=Mvc2TemplatedHelperBeforePicNik_1.jpg"><img title="Mvc2TemplatedHelperBeforePicNik" border="0" alt="Mvc2TemplatedHelperBeforePicNik" src="http://elijahmanor.com/webdevdotnet/image.axd?picture=Mvc2TemplatedHelperBeforePicNik_thumb_1.jpg" width="628" height="78"></a> </p> <p>You end up having to provides the layout of the controls and explicitly mention the label, input controls, and validation for each property.  </p> <h4>Modify the Template Helpers MasterPage </h4> <p>I soon began to miss the simple syntax of rendering all the necessary code like I was used to when using the Opinionated Input Builders outputted from the MVC Contrib.</p> <p>Well, a while back <a href="http://twitter.com/bradwilson" target="_blank">Brad Wilson</a> (one of the ASP.NET MVC 2 developers), wrote an awesome series about Templated Helpers and the last post in the series, <a href="http://bradwilson.typepad.com/blog/2009/10/aspnet-mvc-2-templates-part-5-master-page-templates.html" target="_blank">ASP.NET MVC 2 Templates, Part 5: Master Page Templates</a>, he addressed this granular Opinionated Input Builder type syntax!</p> <p>All you do, is to override the Master Page that the templates use internally. So, inside my Master Page I layout where I want the label, validation, and input controls to go and then ASP.NET MVC 2 does the rest by resolving which Template Helper to use!</p> <p>I modified the Master Page some to suite my needs (I use divs instead of tables), but overall it is the same one that he lays out on his blog. </p> <p><strong>EditorTemplates/Tempate.Master</strong></p> <pre><%@ Master Language="C#" Inherits="System.Web.Mvc.ViewMasterPage" %><br><script runat="server"><br>    protected override void OnInit(EventArgs e) {<br>        base.OnInit(e);<br><br>        if (ViewData.ModelMetadata.HideSurroundingHtml) {<br>            TablePlaceholder.Visible = false;<br>        }<br>        else {<br>            Controls.Remove(Data);<br>            DataPlaceholder.Controls.Add(Data);<br>        }<br>    }<br></script><br><asp:ContentPlaceHolder runat="server" id="Data" /><br><asp:PlaceHolder runat="server" id="TablePlaceholder"><br>    <div class="displayLayout"><br>        <div class="displayLabel"><br>            <asp:ContentPlaceHolder runat="server" id="Label"><br>                <%= ViewData.ModelMetadata.IsRequired ? "*" : "" %><br>                <%= ViewData.ModelMetadata.GetDisplayName() %><br>            </asp:ContentPlaceHolder><br>        </div><br>        <div class="displayField"><br>            <asp:PlaceHolder runat="server" id="DataPlaceholder" /><br>            <asp:ContentPlaceHolder runat="server" ID="Validation"><br>                <%= Html.ValidationMessage("") %><br>            </asp:ContentPlaceHolder>            <br>        </div><br>        <div style="clear: both;"></div><br>    </div>    <br></asp:PlaceHolder></pre> <p><strong>EditorTemplate/String.aspx</strong></p> <pre><%@ Page Language="C#" MasterPageFile="Template.Master" Inherits="System.Web.Mvc.ViewPage" %><br><asp:Content ID="Content1" ContentPlaceHolderID="Data" runat="server"><br>    <%= Html.TextBox("", ViewData.TemplateInfo.FormattedModelValue,<br>                     new { @class = "text-box single-line" }) %><br></asp:Content></pre> <p>There are several other files that you’ll need. I’ve grabbed most of them from Brad’s blog post and have them in the demo application below that you can download.</p> <p><a href="http://elijahmanor.com/webdevdotnet/image.axd?picture=0003d725337bf3a4617919ac6126dc07PicNik_1.jpg"><img title="0003d725337bf3a4617919ac6126dc07PicNik" border="0" alt="0003d725337bf3a4617919ac6126dc07PicNik" src="http://elijahmanor.com/webdevdotnet/image.axd?picture=0003d725337bf3a4617919ac6126dc07PicNik_thumb_1.jpg" width="628" height="601"></a> </p> <p>Now we can try the above scenario one more time and get the output that we were expecting.</p> <pre><% Html.EnableClientValidation(); %><br><% using (Html.BeginForm()) { %><br><br>    <%= Html.EditorFor(m => m.FirstName) %><br>    <%= Html.EditorFor(m => m.LastName)%><br>    <%-- Purposely Not Show the Email –%><br><br>    <p class="actions"> <br>        <input type="submit" value="Create" /> <br>    </p> <br><br><% } %></pre> <p> </p> <p><a href="http://elijahmanor.com/webdevdotnet/image.axd?picture=Mvc2TemplatedHelperAfterPicNik_1.jpg"><img title="Mvc2TemplatedHelperAfterPicNik" border="0" alt="Mvc2TemplatedHelperAfterPicNik" src="http://elijahmanor.com/webdevdotnet/image.axd?picture=Mvc2TemplatedHelperAfterPicNik_thumb_1.jpg" width="628" height="103"></a> </p> <p> </p> <p><a href="http://elijahmanor.com/downloads/opinionatedtemplatehelpers.zip"><img title="cooltext439925016" border="0" alt="cooltext439925016" src="http://elijahmanor.com/webdevdotnet/image.axd?picture=cooltext439925016_2.png" width="244" height="58"></a></p>