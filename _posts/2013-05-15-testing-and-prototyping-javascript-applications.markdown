---
layout: post
title: Testing and Prototyping JavaScript Applications
date: '2013-05-15 05:12:00'
---

<div></div><div><a href="http://manor.im/etm-ps-testing" target="_blank"><img border="0" height="108" src="http://2.bp.blogspot.com/-yXXhhxbcoF8/UZL9ZYuh1tI/AAAAAAAAbfU/V-i0lhimYVw/s640/front-end-first-testing-prototyping.png" width="640"></a></div><br>I'm pleased to announce that I've finished my first course for Pluralsight entitled <a href="http://manor.im/etm-ps-testing" target="_blank">Front-End First: Testing and Prototyping JavaScript Apps</a>.<br><br>Years ago it was common for the back-end to have code coverage, but having unit tests for client-side JavaScript was difficult, cumbersome, and rare. Thankfully, today that is no longer the case. By using various tools and libraries such as <a href="http://visionmedia.github.io/mocha/" target="_blank">Mocha</a>, <a href="http://sinonjs.org/" target="_blank">Sinon.js</a>, and <a href="http://gruntjs.com/" target="_blank">GruntJS</a>Â you can easily provide code coverage for your front-end as well.<br><br><a href="http://manor.im/etm-ps-testing" target="_blank"><img border="0" height="332" src="http://2.bp.blogspot.com/-ivmJGjSrXRU/UZL9JX3QtsI/AAAAAAAAbfM/njUfctr-R7I/s640/unit-testing-tools.png" width="640"></a>Historically a front-end developer had to wait until the back-end was complete before they could start truly building a functional User Interface. Thankfully today there are libraries such as <a href="https://github.com/appendto/jquery-mockjax" target="_blank">Mockjax</a>, <a href="http://amplifyjs.com/api/request/" target="_blank">AmplifyJS</a>, and <a href="https://github.com/mennovanslooten/mockJSON" target="_blank">mockJSON</a> that can enable you to simulate the interactions with the back-end before its even complete. By doing so, this enables a front-end developer to work independently from the back-end and allows both teams to efficiently work within their speciality. <br><br><br><div></div>