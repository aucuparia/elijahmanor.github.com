---
layout: post
title: Notable Programmer Quotes
date: '2013-01-30 15:01:00'
---

<blockquote>Any fool can write code that a computer can understand. Good programmers write code that humans can understand. -Martin Fowler<br><br>"Refactoring: Improving the Design of Existing Code" by Martin Fowler, Kent Beck (Contributor), John Brant (Contributor), William Opdyke, don Roberts, ISBN: 0201485672</blockquote><br><blockquote>We try to solve the problem by rushing through the design process so that enough time is left at the end of the project to uncover the errors that were made because we rushed through the design process. --by Glenford J. Myers<br><br>"Code Complete: A Practical Handbook of Software Construction" by Steve C McConnell, ISBN: 1556154844, page: 143</blockquote><br><blockquote>"Considering the current sad state of our computer programs, software development is clearly still a black art, and cannot yet be called an engineering discipline." --Bill Clinton</blockquote><br><blockquote>"A program is never less than 90% complete, and never more than 95% complete." --Terry Baker</blockquote><br><blockquote>"The key to performance is elegance, not battalions of special cases." --Jon Bentley and Doug McIlroy</blockquote><br><blockquote>"A C program is like a fast dance on a newly waxed dance floor by people carrying razors." --Waldi Ravens</blockquote><br><blockquote>There is no programming language, no matter how structured, that will prevent programmers from making bad programs. --Larry Flon</blockquote><br><blockquote>"Their rumpled clothes, their unwashed and unshaven faces, and their uncombed hair all testify that they are oblivious to their bodies and to the world in which they move. These are computer bums, compulsive programmers." --Joseph Weizenbaum </blockquote><br><blockquote>"The computer programmer is a creator of universes for which he alone is responsible. Universes of virtually unlimited complexity can be created in the form of computer programs." --Joseph Weizenbaum</blockquote><br><blockquote>"The most effective debugging tool is still careful thought, coupled with judiciously placed print statements." --Brian W. Kernighan</blockquote><br><blockquote>"Being a social outcast helps you stay concentrated on the really important things, like thinking and hacking." --Eric Raymond</blockquote><br><blockquote>"Complexity kills. It sucks the life out of developers, it makes products difficult to plan, build and test, it introduces security challenges and it causes end-user and administrator frustration." --Ray Ozzie</blockquote><br><blockquote>"As soon as we started programming, we found to our surprise that it wasn't as easy to get programs right as we had thought. Debugging had to be discovered. I can remember the exact instant when I realized that a large part of my life from then on was going to be spent in finding mistakes in my own programs."" --Maurice Wilkes</blockquote><br><blockquote>"Most software today is very much like an Egyptian pyramid with millions of bricks piled on top of each other, with no structural integrity, but just done by brute force and thousands of slaves." --Alan Kay</blockquote><br><blockquote>"A test that reveals a bug has succeeded, not failed." --Boris Beizer</blockquote><br><blockquote>"A good programmer is someone who looks both ways before crossing a one-way street." --Doug Linder</blockquote><br><blockquote>"More people have ascended bodily into heaven than have shipped great software on time." --Jim McCarthy</blockquote><br><blockquote>"Ugly programs are like ugly suspension bridges: they're much more liable to collapse than pretty ones, because the way humans (especially engineer-humans) perceive beauty is intimately related to our ability to process and understand complexity. A language that makes it hard to write elegant code makes it hard to write good code." --Eric S. Raymond</blockquote><br><blockquote>"To err is human, but to really screw things up requires a computer." --Unknown</blockquote><br><blockquote>"When I am working on a problem, I never think about beauty. I think only of how to solve the problem. But when I have finished, if the solution is not beautiful, I know it is wrong." -R Buckminster Fuller</blockquote><br><blockquote>"Alzheimer's Law of Programming: Looking at code you wrote more than two weeks ago is like looking at code you are seeing for the first time." -Via Dan Hurvitz</blockquote><br><blockquote>"Most of you are familiar with the virtues of a programmer. There are three, of course: laziness, impatience, and hubris." --Larry Wall</blockquote><br><blockquote>"Trying to outsmart a compiler defeats much of the purpose of using one." --Kernighan & Plauger</blockquote><br><blockquote>"Good programmers use their brains, but good guidelines save us having to think out every case." --Francis Glassborow</blockquote><br><blockquote>"If cars evolved at the same rate as computers, they'd cost a quarter, run for a year on a half-gallon of gas, and crash once a day, killing everyone inside." --Unknown</blockquote><br><blockquote>"You can't have great software without a great team, and most software teams behave like dysfunctional families." --Jim McCarthy</blockquote><br><blockquote>"It's better to wait for a productive programmer to become available than it is to wait for the first available programmer to become productive." --Steve McConnell</blockquote><br><blockquote>"Good code is its own best documentation. As you're about to add a comment, ask yourself, 'How can I improve the code so that this comment isn't needed?' Improve the code and then document it to make it even clearer." --Steve McConnell </blockquote><br><blockquote>"At the source of every error which is blamed on the computer, you will find at least two human errors, including the error of blaming it on the computer." --Unknown</blockquote><br><blockquote>"bug, n: An elusive creature living in a program that makes it incorrect. The activity of "debugging", or removing bugs from a program, ends when people get tired of doing it, not when the bugs are removed." --Datamation</blockquote><br><blockquote>"Imitating paper on a computer screen is like tearing the wings off a 747 and using it as a bus on the highway." --Ted Nelson</blockquote><br><blockquote>"If you cannot grok the overall structure of a program while taking a shower, you are not ready to code it." --Richard Pattis</blockquote><br><blockquote>"It's OK to figure out murder mysteries, but you shouldn't need to figure out code. You should be able to read it." --Steve C McConnell</blockquote><br><blockquote>"From a programmer's point of view, the user is a peripheral that types when you issue a read request."  -P. Williams</blockquote><br><blockquote>"More computing sins are committed in the name of efficiency (without necessarily achieving it) than for any other single reason - including blind stupidity." --W.A. Wulf</blockquote><br><blockquote>"Measuring programming progress by lines of code is like measuring aircraft building progress by weight." --Bill Gates</blockquote><br><blockquote>"Imagine if every Thursday your shoes exploded if you tied them the usual way. This happens to us all the time with computers, and nobody thinks of complaining." -- Jeff Raskin</blockquote><br><blockquote>"Controlling complexity is the essence of computer programming." -Brian W. Kernighan</blockquote><br><blockquote>"Walking on water and developing software from a specification are easy if both are frozen." --Edward V Berard</blockquote><br><blockquote>"If debugging is the process of removing bugs, then programming must be the process of putting them in?" --Unknown</blockquote><br><blockquote>"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it." --Brian W. Kernighan</blockquote><br><blockquote>"The first 90% of the code accounts for the first 90% of the development time. The remaining 10% of the code accounts for the other 90% of the development time." --Tom Cargill</blockquote><br><blockquote>standards, n.: The principles we use to reject other people's code</blockquote><br><blockquote>Programmer: An ingenious device that converts caffeine into code -- Unknown</blockquote>